# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end

lane :internal do
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  continue = prompt(
  text: "Do you really want to push to INTERNAL ? Please check that every files (including changelog) are ready.",
  boolean: true)
  #Copy changelog
  if continue
    Dir.chdir "metadata/android/fr-FR" do
      sh("type last_changelog.txt >> changelogs/#{build_number}.txt")
    end
    Dir.chdir "../.." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      sh("flutter", "build", "appbundle","--build-number=#{build_number}")
      sh("flutter", "build", "apk","--build-number=#{build_number}", "--split-per-abi")

    end
    upload_to_play_store(track: 'internal', aab: '../build/app/outputs/bundle/release/app-release.aab', package_name: "fr.ynotes")
    mailgun(
    to: "gola.idspace@gmail.com",
    success: true,
    message: "La mise en circuit interne de l'application yNotes (build : #{build_number}) est un succ√®s !")
  end

end
lane :test do
  mailgun(
  to: "gola.idspace@gmail.com",
  success: true,
  message: "Coucou mon petit ! \n test")
end
lane :githubrelease do
  
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  Dir.chdir "../.." do
    sh("flutter", "build", "apk","--build-number=#{build_number}", "--split-per-abi")
  end
  github_release = set_github_release(
    repository_name: "ModernChocolate/ynotes",
    api_token: ENV["GITHUB_TOKEN"],
    name: "yNotes #{version}+#{build_number}",
    tag_name: "v#{version}+#{build_number}",
    description: (File.read("metadata/android/fr-FR/last_changelog_github.txt") rescue "No changelog provided."),
    commitish: "master",
    is_prerelease: true,
    upload_assets: ["../build/app/outputs/apk/release/app-arm64-v8a-release.apk", "../build/app/outputs/apk/release/app-armeabi-v7a-release.apk", "../build/app/outputs/apk/release/app-x86_64-release.apk"]
  )
end
lane :release do
  # Variant 1: Read from file system
  #   note the `..`, since fastlane runs in the _fastlane_ directory
  changelog = File.read("../Changelog.txt")
  gradle(
    task: 'assemble',
    build_type: 'Release'
  )
  upload_to_play_store
end