# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Deploy to closed beta track"
  lane :gh_actions_beta_release do
    begin
      gradle(task: "clean")
      gradle(
        task: "bundle",
        build_type: 'Release'
      )
      upload_to_play_store(
        track: 'beta',
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_metadata: true,
        skip_upload_images: true,
        skip_upload_screenshots: true,
        release_status: "draft",
        version_code: flutter_version()["version_code"],
      )
    end
  end
end

begin lane :beta do
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  continue = prompt(
  text: "Do you really want to push to BETA ? Please check that every files (including changelog) are ready.",
  boolean: true)
  linux = prompt(
  text: "Are you currently using Linux ?",
  boolean: true)
  command = "type"
  #Use linux cat command instead of type
  if linux
    command = "cat"
  end
  if continue
    #Copy changelog
    Dir.chdir "metadata/android/fr-FR" do
      sh("#{command} last_changelog.txt > changelogs/#{build_number}.txt")
    end
    Dir.chdir "../.." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")

    end
    upload_to_play_store(track: 'beta', aab: '../build/app/outputs/bundle/prodRelease/app-prod-release.aab', package_name: "fr.ynotes")
  end
  gh = prompt(
  text: "Do you want to push to github ?",
  boolean: true)
  if gh
    githubrelease()
  end
end


lane :githubrelease do
  
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  github_release = set_github_release(
    repository_name: "ModernChocolate/ynotes",
    api_token: ENV["GITHUB_TOKEN"],
    name: "yNotes #{version}+#{build_number}",
    tag_name: "v#{version}+#{build_number}",
    description: (File.read("metadata/android/fr-FR/last_changelog_github.txt") rescue "No changelog provided."),
    commitish: "master",
    is_prerelease: true,
    upload_assets: ["../build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk", "../build/app/outputs/flutter-apk/app-armeabi-v7a-prod-release.apk", "../build/app/outputs/flutter-apk/app-x86_64-prod-release.apk"]
  )
end
lane :local_test do
  build_number = number_of_commits()
  Dir.chdir "../.." do
      sh("flutter","clean")
      sh("flutter", "build", "apk", "--flavor", "prod", "--release","--build-number=#{build_number}", "--split-per-abi")
  end
    #Edit this part if you need to install another APK
    Dir.chdir "../.." do
      sh("adb", "install", "build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk")
      sh("adb shell am start -n fr.ynotes/.MainActivity")
    end 

  rescue # if can't install ynotes
      Dir.chdir "../.." do
        sh("adb", "uninstall", "fr.ynotes")
        sh("adb", "install", "build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk")
        sh("adb shell am start -n fr.ynotes/.MainActivity")
      end
  end
end 
