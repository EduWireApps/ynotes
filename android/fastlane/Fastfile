# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)



begin lane :beta do
  gh = prompt(
    text: "Do you want to push to github ?",
    boolean: true)
    if gh
      githubrelease()
    end
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  continue = prompt(
  text: "Do you really want to push to BETA ? Please check that every files (including changelog) are ready.",
  boolean: true)
  linux = prompt(
  text: "Are you currently using Linux ?",
  boolean: true)
  command = "type"
  #Use linux cat command instead of type
  if linux
    command = "cat"
  end
  if continue
    #Copy changelog
    Dir.chdir "metadata/android/fr-FR" do
      sh("#{command} last_changelog.txt > changelogs/#{build_number}.txt")
    end
    upload_to_play_store(
        track: 'beta',
        aab: '../build/app/outputs/bundle/prodRelease/app-prod-release.aab',
        package_name: 'fr.ynotes',
        release_status: "draft",
        version_code: flutter_version()["version_code"],
      )
  end
end

begin lane :prod do
  gh = prompt(
    text: "Do you want to push to github ?",
    boolean: true)
    if gh
      githubrelease()
    end
  build_number = number_of_commits()
  version = flutter_version()["version_name"]
  continue = prompt(
  text: "Do you really want to push to PROD ? Please check that every files (including changelog) are ready.",
  boolean: true)
  linux = prompt(
  text: "Are you currently using Linux ?",
  boolean: true)
  command = "type"
  #Use linux cat command instead of type
  if linux
    command = "cat"
  end
  if continue
    #Copy changelog
    Dir.chdir "metadata/android/fr-FR" do
      sh("#{command} last_changelog.txt > changelogs/#{build_number}.txt")
    end
    upload_to_play_store(
        track: 'production',
        track_promote_to: 'production',
        aab: '../build/app/outputs/bundle/prodRelease/app-prod-release.aab',
        package_name: 'fr.ynotes',
        release_status: "draft",
        version_code: flutter_version()["version_code"],)
  end
end

lane :githubrelease do
  begin
      build_number = number_of_commits()
      version = flutter_version()["version_name"]
      folder_path = "../../build/app/outputs/flutter-apk"
      Dir.glob(folder_path + "/*").sort.each do |f|
        begin
          # "try" block
          oldname = File.basename(f, File.extname(f))
          filename = oldname + "_v#{version}+#{build_number}"
          filename.sub! 'app', 'yNotes'
          puts filename
          Dir.chdir folder_path do
            sh("mv #{oldname}.apk #{filename}.apk")
          end
        end
        rescue
          next
        end
      end
  ensure
      github_release = set_github_release(
      repository_name: "EduWireApps/ynotes",
      api_token: ENV["GITHUB_TOKEN"],
      name: "yNotes #{version}+#{build_number}",
      tag_name: "v#{version}+#{build_number}",
      description: (File.read("metadata/android/fr-FR/last_changelog_github.txt") rescue "No changelog provided."),
      is_prerelease: true,
      upload_assets: ["../build/app/outputs/flutter-apk/yNotes-arm64-v8a-prod-release"+ "_v#{version}+#{build_number}.apk", "../build/app/outputs/flutter-apk/yNotes-armeabi-v7a-prod-release" + "_v#{version}+#{build_number}.apk", "../build/app/outputs/flutter-apk/yNotes-x86_64-prod-release"+ "_v#{version}+#{build_number}.apk"])
  end
end


lane :local_test do
  build_number = number_of_commits()
  Dir.chdir "../.." do
      sh("flutter","clean")
      sh("flutter", "build", "apk", "--flavor", "prod", "--release","--build-number=#{build_number}", "--split-per-abi")
  end
  #Edit this part if you need to install another APK
  Dir.chdir "../.." do
    sh("adb", "install", "build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk")
      sh("adb shell am start -n fr.ynotes/.MainActivity")
  end 

  rescue # if can't install ynotes
      Dir.chdir "../.." do
        sh("adb", "uninstall", "fr.ynotes")
        sh("adb", "install", "build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk")
        sh("adb shell am start -n fr.ynotes/.MainActivity")
      end
  end
end 
