# cd.yml
name: CD

on:
  push:
    branches:
      - beta-releases

jobs:
  # CD
  deploy_android:
    runs-on: macos-latest
    # Beta release only
    if: github.ref == 'refs/heads/beta-releases'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Github commit count
        run: git rev-list HEAD --count
      - name: Decrypt Android keys
        run: sh ./.github/scripts/decrypt_android_keys.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
            java-version: '12.x'

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
            flutter-version: '2.0.x'

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-
      - name: Build Android App Bundle
        run: flutter build appbundle --flavor prod --build-number=$(git rev-list HEAD --count)
      - name: Build Android apks
        run: flutter build apk --split-per-abi --flavor prod --build-number=$(git rev-list HEAD --count)          
      - name: Download bundle dependencies
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install   
        working-directory: android/fastlane
      - name: Release to Google Play (beta)
        run: |
          bundle exec fastlane beta 
        working-directory: android/fastlane
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN}}
      
      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
         xcode-version: latest-stable
    
      - name: Setup SSH Keys and known_hosts for fastlane match
        run: |
            SSH_PATH="$HOME/.ssh"
            mkdir -p "$SSH_PATH"
            touch "$SSH_PATH/known_hosts"    
            echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"    
            chmod 700 "$SSH_PATH"
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 600 "$SSH_PATH/known_hosts"
            chmod 600 "$SSH_PATH/id_rsa"    
            eval $(ssh-agent)
            ssh-add "$SSH_PATH/id_rsa"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_KEY }}

      - name: Decrypt iOS keys
        run: sh ./.github/scripts/decrypt_ios_keys.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}  

      - name: Install Pods
        working-directory: ios

        run: |
          pod install
      
      - name: Download bundle dependencies
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install   
        working-directory: ios/fastlane

      - name: Update to App Store
        working-directory: ios
        run: |
          export LC_ALL=fr_FR.UTF-8
          export LANG=fr_FR.UTF-8
          bundle exec fastlane set_release_version 
          bundle exec fastlane prod
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_STORE_API_KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }},
          APP_STORE_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_API_KEY_ISSUER_ID }},
          APP_STORE_API_KEY: ${{ secrets.APP_STORE_API_KEY }},
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
